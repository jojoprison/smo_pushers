import numpy as np


def generate_r():
    """
    Генерирует случайные числа в пределе [0, 1] * 1 и берет от них
    отрицательный натуральный логарифм

    Returns:
        (float):
            Случайное время прибытия поезда
    """

    return -np.log(np.random.uniform(low=0.0, high=1.0)) * 1


# на вход интенсивность событий (в час)
def flow_init(intensity, flow_time):
    """
    Генерирует Пуассоновский поток случайных событий. В данном
    случае поток прибытий поездов к станции толкания

    Args:
        intensity (int):
            Интенсивность событий (в 24 часа), λ
        flow_time (int):
            Время потока (наблюдения) в часах, Tн

    Returns:
        events (list):
            Список, содержащий время прихода поездов
    """

    # приводим интенсивность в нужный вид
    intensity = intensity / 24
    # затраченное время
    time_ = 0
    # число событий за время наблюдения, N
    count = 0
    # список, содержащий инфу, в какое время пришли поезда
    events = []

    while time_ <= flow_time:
        # равномерно распределенное от 0 до 1 случайное число, r
        r = generate_r()
        # время появления собития, m = 1/λ
        m = 1 / intensity
        # интервал между случайными собитями , τ
        time_interval = m * r
        # фиксируем время относительно предыдущего события
        time_ = time_ + time_interval
        # считаем число событий
        count += 1

        # добавляем событие в список
        events.append(time_)

    return events
